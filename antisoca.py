# meta developer: @usershprot
# meta name: DeezerFullTrack
# meta version: 1.1

from .. import loader, utils
import requests
import io
from PIL import Image

class DeezerFullTrackMod(loader.Module):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞ —Å –æ–±–ª–æ–∂–∫–æ–π –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    strings = {"name": "DeezerFullTrack"}

    async def sfindcmd(self, message):
        """‚ñ´Ô∏è .sfind <–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî –ù–∞–π—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–µ–∫ —Å –æ–±–ª–æ–∂–∫–æ–π"""
        query = utils.get_args_raw(message)
        if not query:
            return await message.edit("–£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞.")

        # 1. –ò—â–µ–º —Ç—Ä–µ–∫ –≤ Deezer
        res = requests.get(f"https://api.deezer.com/search?q={query}").json()
        if not res.get("data"):
            return await message.edit("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        track = res["data"][0]

        title = track['title']
        artist = track['artist']['name']
        cover_url = track['album']['cover_big']

        # 2. –ü–æ–ª—É—á–∞–µ–º –æ–±–ª–æ–∂–∫—É
        cover = requests.get(cover_url).content
        img = io.BytesIO(cover)
        img.name = "cover.jpg"

        # 3. –ü–æ–ª—É—á–∞–µ–º mp3-—Ñ–∞–π–ª –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        search_query = f"{artist} - {title}"
        await message.edit(f"üîé –ò—â—É —Ç—Ä–µ–∫: <b>{search_query}</b>...", parse_mode="html")

        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ Telegram-–±–æ—Ç–∞ —á–µ—Ä–µ–∑ inline
            result = await message.client.inline_query("@ddownloaderbot", search_query)
            result = [r for r in result if r.type == "audio"]
            if not result:
                return await message.edit("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–Ω—ã–π —Ç—Ä–µ–∫.")
            
            await result[0].click(message.chat_id)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ
            caption = f"<b>{title}</b>\n<code>{artist}</code>"
            await message.client.send_file(
                message.chat_id,
                img,
                caption=caption,
                parse_mode="html"
            )

            await message.delete()

        except Exception as e:
            return await message.edit(f"–û—à–∏–±–∫–∞: {e}")